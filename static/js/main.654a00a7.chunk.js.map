{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onStop","onRestart","ManipulationPanel","onChange","icon","faArrowLeft","faArrowUp","faArrowDown","faArrowRight","getFoodPosition","fieldSize","exclude","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","OppositeDirection","up","right","left","down","DirectionKeyCodeMap","37","38","39","40","Delta","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","direction","setDirection","setDifficulty","tick","setTick","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","delta","newPosition","position","isCollision","isEatingMyself","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.654a00a7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navigation = ({ length, difficulty = 3, onChangeDifficulty }) => {\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n    const onUpDiffuculty = () => onChangeDifficulty(difficulty + 1)\n    const onDownDiffuculty = () => onChangeDifficulty(difficulty - 1) \n    return (\n        <div className=\"navigation\">\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Length: </span>\n                <div className=\"navigation-item-number-container\">\n                    <div className=\"num-board\">{length}</div>\n                </div>\n            </div>\n            <div className=\"navigation-item\">\n                <span className=\"navigation-label\">Difficulty: </span>\n                <div className=\"navigation-item-number-container\">\n                    <span className=\"num-board\">{difficulty}</span>\n                    <div className=\"difficulty-button-container\">\n                        <div className={`difficulty-button difficulty-up ${upVisibility}`} onClick={onUpDiffuculty}></div>\n                        <div className={`difficulty-button difficulty-down ${downVisibility}`} onClick={onDownDiffuculty}></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Navigation;","import React from 'react'\n\nconst Field = ({ fields }) => {\n    return (\n        <div className=\"field\">\n            {\n                fields.map((row) => {\n                    return row.map((column) => {\n                        return <div className={`dots ${column}`}></div>\n                    })\n                })\n            }\n        </div>\n    );\n};\n\nexport default Field;","import React from 'react'\n\nconst Button = ({ status, onStart, onStop, onRestart }) => {\n    return (\n        <div className=\"button\">\n            { status === 'gameover' && <button className='btn btn-gameover' onClick={onRestart}>gameover</button>}\n            { status === 'init' && <button className='btn btn-init' onClick={onStart}>start</button>}\n            { status === 'suspended' && <button className='btn btn-suspended' onClick={onStart}>start</button>}\n            { status === 'playing' && <button className='btn btn-playing' onClick={onStop}>stop</button>}\n        </div>\n    );\n};\n\nexport default Button;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n    faArrowLeft,\n    faArrowUp,\n    faArrowDown,\n    faArrowRight\n} from '@fortawesome/free-solid-svg-icons'\n\n\nconst ManipulationPanel = ({ onChange }) => {\n    const onUp = () => onChange('up')\n    const onRight = () => onChange('right')\n    const onLeft = () => onChange('left')\n    const onDown = () => onChange('down')\n    \n    return (\n        <div className=\"manipulation-panel\">\n            <button className='manipulation-btn btn btn-left' onClick={onLeft}><FontAwesomeIcon icon={faArrowLeft} /></button>\n            <div>\n            <button className='manipulation-btn btn btn-up' onClick={onUp}><FontAwesomeIcon icon={faArrowUp} /></button>\n            <button className='manipulation-btn btn btn-down' onClick={onDown}><FontAwesomeIcon icon={faArrowDown} /></button>\n            </div>\n            <button className='manipulation-btn btn btn-right' onClick={onRight}><FontAwesomeIcon icon={faArrowRight} /></button>\n        </div>\n    );\n};\n\nexport default ManipulationPanel;","export const getFoodPosition = (fieldSize, exclude) => {\n    while (true) {\n        const x = Math.floor(Math.random() * (fieldSize -1 -1)) + 1\n        const y = Math.floor(Math.random() * (fieldSize -1 -1)) + 1\n        const conflict = exclude.some(item => item.x === x && item.y === y)\n        if (!conflict) {\n            return { x, y }\n        }\n    }\n\n}\n\nexport const initFields = (fieldSize, snake) => {\n    const fields = []\n    for (let i = 0; i < fieldSize; i++) {\n        const cols = new Array(fieldSize).fill('')\n        fields.push(cols)\n    }\n    fields[snake.y][snake.x] = 'snake'\n\n    const food = getFoodPosition(fieldSize, [snake])\n    fields[food.y][food.x] = 'food'\n\n    return fields;\n}","import React, { useCallback, useState, useEffect } from 'react'\nimport Navigation from './components/Navigation'\nimport Field from './components/Field'\nimport Button from './components/Button'\nimport ManipulationPanel from './components/ManipulationPanel'\nimport { initFields, getFoodPosition } from './utils/index'\n\nconst initialPosition = { x: 17, y: 17 }\nconst fieldSize = 35\nconst initialValues = initFields(fieldSize, initialPosition)\nconst defaultInterval = 100\nconst defaultDifficulty = 3\nconst Difficulty = [1000, 500, 100, 50, 10]\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n})\n\nconst OppositeDirection = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\nconst DirectionKeyCodeMap = Object.freeze({\n  37: OppositeDirection.left,\n  38: OppositeDirection.up,\n  39: OppositeDirection.right,\n  40: OppositeDirection.down\n})\n\nconst Delta = Object.freeze({\n  up: { x: 0, y: -1 },\n  right: { x: 1, y: 0 },\n  left: { x: -1, y: 0 },\n  down: { x: 0, y: 1 }\n})\n\nconst isCollision = (fieldSize, position) => {\n  if (position.y < 0 || position.x < 0) {\n    return true;\n  }\n\n  if (position.y > fieldSize -1 || position.x > fieldSize - 1) {\n    return true;\n  }\n\n  return false;\n}\n\nlet timer = undefined\n\nconst unsubscribe = () => {\n  if(!timer) {\n    return\n  }\n  clearInterval(timer)\n}\n\nconst isEatingMyself = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [direction, setDirection] = useState(OppositeDirection.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n  const [tick, setTick] = useState(0)\n\n  useEffect(() => {\n    setBody([initialPosition])\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, interval)\n    return unsubscribe\n  }, [difficulty])\n\n  useEffect(() => {\n    if(body.length === 0 || status !== GameStatus.playing) {\n      return\n    }\n    const canContinue = handleMoving()\n    if (!canContinue) {\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  const onStart = () => setStatus(GameStatus.playing)\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  const onRestart = () => {\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n    setDirection(OppositeDirection.up)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setFields(initFields(fields.length, initialPosition))\n  }\n\n  const onChangeDirection = useCallback((newDirection) => {\n    if (status !== GameStatus.playing) {\n      return direction\n    }\n    if (OppositeDirection[direction] === newDirection) {\n      return\n    }\n    setDirection(newDirection)\n  }, [direction, status])\n\n  const onChangeDifficulty = useCallback((difficulty) => {\n    if (status !== GameStatus.init) {\n      return\n    }\n    if (difficulty < 1 || difficulty > difficulty.length) {\n      return\n    }\n    setDifficulty(difficulty)\n  }, [status, difficulty])\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode]\n      if (!newDirection) {\n        return\n      }\n\n      onChangeDirection(newDirection)\n    }\n\n    document.addEventListener('keydown', handleKeyDown)\n    return () => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  const handleMoving = () => {\n    const { x, y } = body[0]\n    const delta = Delta[direction]\n    const newPosition = {\n      x: x + delta.x,\n      y: y + delta.y\n    }\n    if (isCollision(fields.length, newPosition) || isEatingMyself(fields, newPosition)) {\n      unsubscribe()\n      return false\n    }\n    const newBody = [...body]\n    if (fields[newPosition.y][newPosition.x] !== 'food') {\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    } else {\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] ='snake'\n    newBody.unshift(newPosition)\n    setBody(newBody)\n    setFields(fields)\n    return true\n  }\n  \n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"title-container\">\n          <h1 className=\"title\">Snake Game</h1>\n        </div>\n        <Navigation length={body.length} difficulty={difficulty} onChangeDifficulty={onChangeDifficulty} />\n      </header>\n      <main className=\"main\">\n        <Field fields={fields} />\n      </main>\n      <footer className=\"footer\">\n        <Button status={status} onStart={onStart} onStop={onStop} onRestart={onRestart} />\n        <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}